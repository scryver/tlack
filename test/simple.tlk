func main()
{
    hallo = 4;
    test = 0x1234;
    test *= -8;
    test -= 23;
    test = test % 15;  // Note that this will create an unnecessary xchg if the test value was already in a register
    test %= hallo;     // (((0x1234 * -8) - 23) % 15) % hallo
    hallo = 4 + test;
    test %= 16 * hallo;
    test = test + test - test * test / test % 2;
    b = test == hallo;
    c = test != hallo;
    d = test < hallo;
    e = test > hallo;
    f = test <= hallo;
    g = test >= hallo;
    h = test - hallo;
    i = test + hallo;
    j = test * hallo;
    k = test / hallo;
    k += j;
    k -= i;
    i += j;
    j += k;
    i -= j + k;
    h += i;
    g -= h;
    b += j;
    c -= i;
    d += j;
    e += k;
    f -= j + k;
    g += i;
    h -= h;
    l = 0;
    l += j;
    o = 0;
    p = 0;
    q = 0;
    o -= i;
    p += j;
    q += o;
    i -= p + k;
    h += q;
    j -= h;
    b += q;
    c -= p;
    d += o;
    e += k;
    f -= j + k;
    g += i;
    h -= h;
    if (test == hallo)
    {
        test = 0x20;
    }
    elif test < hallo
    {
        test = 0x30;
    }
    else
    {
        test = 0x40;
    }

    do
    {
        test += 0x07;
    }
    while (test < 0x80);

    while (test < 0x300)
    {
        test += 0x100;
    }

    a = test;
    // for (0 .. 10) TODO(michiel): different for loops
    // for (x: 0 .. 10) // default name is 'it'
    // for (0 .. 10 : 3) // increment in steps of 3
    // for (objects and pointers) uhhhhhh, todo?
    for (x = 0; x < 9; x += 1)
    {
        test += a;
    }

    test = test + b + c + d + e + f + g;
    //return 2 * (3 + 4) / (6 * 7 + 1) + (0 - 4) * 5 - test - 2 + test - test + test - test + test;
    return test;
}


